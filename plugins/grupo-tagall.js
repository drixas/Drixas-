// Diccionario de c√≥digos de pa√≠s a bandera
const countryFlags = {
  '58': 'üáªüá™', // Venezuela
  '52': 'üá≤üáΩ', // M√©xico
  '54': 'üá¶üá∑', // Argentina
  '51': 'üáµüá™', // Per√∫
  '55': 'üáßüá∑', // Brasil
  '57': 'üá®üá¥', // Colombia
  '591': 'üáßüá¥', // Bolivia
  '56': 'üá®üá±', // Chile
  '593': 'üá™üá®', // Ecuador
  '595': 'üáµüáæ', // Paraguay
  '507': 'üáµüá¶', // Panam√°
  // Agrega m√°s si lo necesitas
};

// Funci√≥n para obtener bandera seg√∫n n√∫mero
function getFlagByNumber(number) {
  for (let len = 3; len >= 1; len--) {
    const code = number.slice(0, len);
    if (countryFlags[code]) return countryFlags[code];
  }
  return 'üè≥Ô∏è'; // Bandera gen√©rica si no encuentra
}

// Handler para #todos y #invocar
async function todosHandler(m, { groupMetadata, conn }) {
  if (!groupMetadata) return;
  let mensaje = '';
  let mentions = [];
  for (let participant of groupMetadata.participants) {
    let num = participant.id.split('@')[0]; // ej: 521234567890
    let flag = getFlagByNumber(num);
    mensaje += `${flag} @${num}\n`;
    mentions.push(participant.id);
  }
  await conn.sendMessage(m.chat, { text: mensaje.trim(), mentions });
}

// Ejemplo de c√≥mo integrarlo
if (m.text === '#todos' || m.text === '#invocar') {
  await todosHandler(m, { groupMetadata, conn });
}